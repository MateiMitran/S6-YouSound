# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: ["production"]
  pull_request:
    branches: ["production"]

jobs:
  build-test-push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: "temurin"
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Gradle Clean
        run: | 
          cd backend/yousound
          gradle clean
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Test YouSound
        run: |
          cd backend/yousound
          gradle test
      - name: Build the backend application
        run: |
          cd backend/yousound/security-service
          chmod +x gradlew
          ./gradlew build
      - name: docker login
        env:
          DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
          DOCKER_PASSWORD: '${{ secrets.DOCKER_PASSWORD }}'
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Build and Push Api Gateway
        run: |
          cd backend/yousound/api-gateway
          docker build -f Dockerfile . -t yousoundd/api-gateway:0.0.2
          docker push yousoundd/api-gateway:0.0.2
      - name: Build and Push Music Service
        run: |
          cd backend/yousound/music-service
          docker build -f Dockerfile . -t yousoundd/music-service:0.0.2
          docker push yousoundd/music-service:0.0.2
      - name: Build and Push Security Service
        run: |
          cd backend/yousound/security-service
          docker build -f Dockerfile . -t yousoundd/security-service:0.0.2
          docker push yousoundd/security-service:0.0.2
      - name: Build and Push Channel Service
        run: |
          cd backend/yousound/social-service
          docker build -f Dockerfile . -t yousoundd/social-service:0.0.2
          docker push yousoundd/social-service:0.0.2
      - name: Build and Push Channel Service
        run: |
          cd backend/yousound/user-service
          docker build -f Dockerfile . -t yousoundd/user-service:0.0.2
          docker push yousoundd/user-service:0.0.2
      - name: Build and Push Frontend
        run: |
          cd frontend/yousound-frontend
          docker build -f Dockerfile . -t yousoundd/frontend:0.0.2
          docker push yousoundd/frontend:0.0.2
  deploy-to-gcp:
    runs-on: ubuntu-latest
    container:
      image: google/cloud-sdk:latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Google Cloud CLI
      env:
        SERVICE_ACCOUNT_KEY_BASE64: ${{ secrets.SERVICE_ACCOUNT }}
      run: |
        echo "$SERVICE_ACCOUNT_KEY_BASE64" | base64 --decode > /tmp/service-account-key.json
        gcloud auth activate-service-account --key-file=/tmp/service-account-key.json
        gcloud config set project flash-surge-386910
        gcloud container clusters get-credentials yousound --region europe-west4 --project flash-surge-386910

    - name: Deploy API Gateway
      working-directory: ./backend/yousound/api-gateway
      run: |
        echo "Apply deployment.yaml for api-gateway"
        kubectl apply -f deployment.yaml

    - name: Deploy Security Service
      working-directory: ./backend/yousound/security-service
      run: |
        echo "Apply deployment.yaml for security service"
        kubectl apply -f deployment.yaml

    - name: Deploy Music Service
      working-directory: ./backend/yousound/music-service
      run: |
        echo "Apply deployment.yaml for music service"
        kubectl apply -f deployment.yaml

    - name: Deploy User Service
      working-directory: ./backend/yousound/user-service
      run: |
        echo "Apply deployment.yaml for user service"
        kubectl apply -f deployment.yaml

    - name: Deploy Social Service
      working-directory: ./backend/yousound/social-service
      run: |
        echo "Apply deployment.yaml for social service"
        kubectl apply -f deployment.yaml