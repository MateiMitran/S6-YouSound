plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "yousound-unique-key-test"
        property "sonar.qualitygate.wait", true
        property "sonar.login",  "sqp_9d2e3547a485b6670947598cb6e566e89d5b6c0e"
        property "sonar.projectName", "yousound-unique"
        property "sonar.organization", "default"
        property "sonar.projectVersion", 1.0
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.binaries", "build/classes"
        property "sonar.sources", "src/main/"

    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.0.3'
    testImplementation 'junit:junit:4.13.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot2:2.0.2'


}

tasks.named('test') {
    useJUnitPlatform()
}
